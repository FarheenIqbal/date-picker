[{"/home/farheen/my-app/src/index.tsx":"1","/home/farheen/my-app/src/reportWebVitals.ts":"2","/home/farheen/my-app/src/App.tsx":"3","/home/farheen/my-app/src/helper.tsx":"4","/home/farheen/my-app/src/CalenderBody.tsx":"5","/home/farheen/my-app/src/CalenderHeader.tsx":"6"},{"size":500,"mtime":1609415974945,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1609415974945,"results":"9","hashOfConfig":"8"},{"size":2967,"mtime":1609501000876,"results":"10","hashOfConfig":"8"},{"size":986,"mtime":1609489084639,"results":"11","hashOfConfig":"8"},{"size":2117,"mtime":1609491886420,"results":"12","hashOfConfig":"8"},{"size":724,"mtime":1609500309111,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1g20c4q",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/farheen/my-app/src/index.tsx",[],["28","29"],"/home/farheen/my-app/src/reportWebVitals.ts",[],"/home/farheen/my-app/src/App.tsx",[],"/home/farheen/my-app/src/helper.tsx",[],"/home/farheen/my-app/src/CalenderBody.tsx",["30"],"import { type } from 'os';\nimport React from 'react';\nimport { daysInMonth } from './helper';\n\ntype CalenderBodyProps = {\n  currentDate: number;\n  currentMonth: number;\n  currentYear: number;\n  onDateChange(\n    event: React.MouseEvent<HTMLTableDataCellElement, MouseEvent>\n  ): void;\n};\n\nfunction makeDaysInAMonthArray(currentMonth: number, currentYear: number) {\n  const arr: number[][] = [];\n  const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay();\n  let dayNum = 1;\n  let i;\n  const numOfDays = daysInMonth(currentMonth, currentYear);\n  //first column\n  arr[0] = [];\n  for (i = 0; i < firstDayOfMonth; i++) arr[0].push(0);\n  for (i = 1; i <= 7 - firstDayOfMonth; i++) arr[0].push(dayNum++);\n\n  //middle columns\n\n  for (i = 0; numOfDays - (7 * i + 1) >= 7 && dayNum <= numOfDays; i++) {\n    arr[i + 1] = [];\n    for (let j = 0; j < 7; j++) {\n      if (dayNum <= numOfDays) arr[i + 1].push(dayNum++);\n      else arr[i + 1].push(0);\n    }\n  }\n  //last column\n  let j, k;\n  if (dayNum <= numOfDays) {\n    arr[i + 1] = [];\n\n    for (j = 0; dayNum <= numOfDays; j++) arr[i + 1].push(dayNum++);\n    for (k = 0; k < 7 - j; k++) arr[i + 1].push(0);\n  }\n  return arr;\n}\n\nfunction CalenderBody({\n  currentDate,\n  currentMonth,\n  currentYear,\n  onDateChange,\n}: CalenderBodyProps) {\n  return (\n    <tbody>\n      <tr className=\"daynames\">\n        <td>Sun</td>\n        <td>Mon</td>\n        <td>Tue</td>\n        <td>Wed</td>\n        <td>Thur</td>\n        <td>Fri</td>\n        <td>Sat</td>\n      </tr>\n      {makeDaysInAMonthArray(currentMonth, currentYear).map((row) => (\n        <tr>\n          {row.map((element) =>\n            element === currentDate ? (\n              <td\n                style={{ backgroundColor: 'blue', color: 'red' }}\n                onClick={(event) => onDateChange(event)}\n              >\n                {element}\n              </td>\n            ) : element === 0 ? (\n              <td></td>\n            ) : (\n              <td onClick={(event) => onDateChange(event)}>{element}</td>\n            )\n          )}\n        </tr>\n      ))}\n    </tbody>\n  );\n}\nexport default CalenderBody;\n","/home/farheen/my-app/src/CalenderHeader.tsx",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":10,"nodeType":"37","messageId":"38","endLine":1,"endColumn":14},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"@typescript-eslint/no-unused-vars","'type' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]